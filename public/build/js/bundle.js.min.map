{"version":3,"sources":["add-post.js","admin.js","change_photo.js","content.js","copy-code.js","edit-post.js","nav.js","post.js","profile.js","tags.js"],"names":["document","addEventListener","querySelector","closeBtn","getElementById","cancelBtn","addCodeBlockBtn","addImageBtn","dynamicSections","window","location","href","itemDiv","createElement","classList","add","removeBtn","innerHTML","remove","appendChild","label","textContent","textarea","name","rows","inputFile","type","previewDiv","e","file","target","files","reader","FileReader","onload","event","img","src","result","readAsDataURL","prevButton","nextButton","contentSection","usersSection","title","style","animation","setTimeout","display","inputPhoto","previewImg","querySelectorAll","forEach","header","toggle","panel","nextElementSibling","contains","block","copyBtn","lines","textToCopy","line","navigator","clipboard","writeText","then","catch","err","console","error","deletePostBtn","confirm","removeItemBtns","editForm","btn","mediaPath","dataset","media","item","closest","hiddenInput","value","evt","btnToggle","mobileMenu","btnCloseMobile","btnAvatar","userPanel","btnCloseUserPanel","postCommentsSection","publicacionIdAttr","getAttribute","publicacionId","parseInt","warn","topLevelCommentBtn","comentar","parentId","texto","bodyData","URLSearchParams","append","fetch","method","headers","Content-Type","body","toString","response","ok","Error","status","text","toggleVisibility","element","topForm","marginTop","textArea","placeholder","width","marginBottom","sendBtn","cursor","trim","reload","alert","createTopLevelForm","preventDefault","stopPropagation","commentCard","commentId","commentid","log","replyForm","setAttribute","createReplyForm","editDescBtn","descriptionContainer","descriptionContent","saveBtn","nuevaDescripcion","description","resp","data","tagsInput","tagsDiv","tagsHiddenInput","tags","showTags","tag","tip","ondblclick","deleteTag","updateHiddenInput","filter","split","keyCode"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){\r\n  'use strict';\r\n\r\n  document.addEventListener('DOMContentLoaded', function() {\r\n    // Seleccionamos .forum-modal\r\n    const modal = document.querySelector('.forum-modal');\r\n    if(!modal) return; // Si no hay modal, no hacemos nada\r\n\r\n    const closeBtn = document.getElementById('closeForumModal');\r\n    const cancelBtn = document.getElementById('cancelNewPostBtn');\r\n    const addCodeBlockBtn = document.getElementById('addCodeBlockBtn');\r\n    const addImageBtn = document.getElementById('addImageBtn');\r\n    const dynamicSections = document.getElementById('dynamicSections');\r\n\r\n    // Cerrar modal => redirige a /foro\r\n    if(closeBtn) {\r\n      closeBtn.addEventListener('click', () => {\r\n        window.location.href = '/foro';\r\n      });\r\n    }\r\n    if(cancelBtn) {\r\n      cancelBtn.addEventListener('click', () => {\r\n        window.location.href = '/foro';\r\n      });\r\n    }\r\n\r\n    // Agregar bloque de código\r\n    if(addCodeBlockBtn && dynamicSections) {\r\n      addCodeBlockBtn.addEventListener('click', () => {\r\n        const itemDiv = document.createElement('div');\r\n        itemDiv.classList.add('forum-modal__dynamic-item');\r\n\r\n        // Botón para eliminar este bloque\r\n        const removeBtn = document.createElement('button');\r\n        removeBtn.classList.add('remove-item-btn');\r\n        removeBtn.innerHTML = '&times;';\r\n        removeBtn.addEventListener('click', () => {\r\n          itemDiv.remove();\r\n        });\r\n        itemDiv.appendChild(removeBtn);\r\n\r\n        const label = document.createElement('label');\r\n        label.textContent = 'Bloque de código:';\r\n        itemDiv.appendChild(label);\r\n\r\n        // textarea para el código, estilo monospace\r\n        const textarea = document.createElement('textarea');\r\n        textarea.name = 'blocks_code[]';\r\n        textarea.rows = 6;\r\n        textarea.classList.add('code-snippet');\r\n        itemDiv.appendChild(textarea);\r\n\r\n        dynamicSections.appendChild(itemDiv);\r\n      });\r\n    }\r\n\r\n    // Agregar imagen extra (con vista previa)\r\n    if(addImageBtn && dynamicSections) {\r\n      addImageBtn.addEventListener('click', () => {\r\n        const itemDiv = document.createElement('div');\r\n        itemDiv.classList.add('forum-modal__dynamic-item');\r\n\r\n        // Botón para eliminar este bloque\r\n        const removeBtn = document.createElement('button');\r\n        removeBtn.classList.add('remove-item-btn');\r\n        removeBtn.innerHTML = '&times;';\r\n        removeBtn.addEventListener('click', () => {\r\n          itemDiv.remove();\r\n        });\r\n        itemDiv.appendChild(removeBtn);\r\n\r\n        const label = document.createElement('label');\r\n        label.textContent = 'Imagen adicional:';\r\n        itemDiv.appendChild(label);\r\n\r\n        const inputFile = document.createElement('input');\r\n        inputFile.type = 'file';\r\n        inputFile.name = 'blocks_images[]';\r\n        itemDiv.appendChild(inputFile);\r\n\r\n        // contenedor de vista previa\r\n        const previewDiv = document.createElement('div');\r\n        previewDiv.classList.add('image-preview-container');\r\n        itemDiv.appendChild(previewDiv);\r\n\r\n        // Al cambiar el input file => vista previa\r\n        inputFile.addEventListener('change', (e) => {\r\n          const file = e.target.files[0];\r\n          if(file) {\r\n            const reader = new FileReader();\r\n            reader.onload = (event) => {\r\n              previewDiv.innerHTML = '';\r\n              const img = document.createElement('img');\r\n              img.src = event.target.result;\r\n              previewDiv.appendChild(img);\r\n            };\r\n            reader.readAsDataURL(file);\r\n          } else {\r\n            previewDiv.innerHTML = '';\r\n          }\r\n        });\r\n\r\n        dynamicSections.appendChild(itemDiv);\r\n      });\r\n    }\r\n\r\n  });\r\n})();\r\n","(function() {\r\n    'use strict';\r\n  \r\n    document.addEventListener('DOMContentLoaded', function() {\r\n      // Obtener los elementos del DOM\r\n      const prevButton = document.getElementById('prev-section');\r\n      const nextButton = document.getElementById('next-section');\r\n      const contentSection = document.querySelector('.admin-content');\r\n      const usersSection = document.querySelector('.admin-users');\r\n      const title = document.querySelector('#admin-content-title');\r\n  \r\n      // Verificar que existan los elementos para evitar errores\r\n      if (!prevButton || !nextButton || !contentSection || !usersSection || !title) {\r\n        return;\r\n      }\r\n  \r\n      // Añadir evento click al botón \"Siguiente\"\r\n      nextButton.addEventListener('click', () => {\r\n        // Ocultar la sección actual con una animación\r\n        contentSection.style.animation = 'slideOutRight 0.5s forwards';\r\n        title.textContent = 'GESTIÓN DE USUARIOS';\r\n  \r\n        // Mostrar la siguiente sección después de un pequeño retraso\r\n        setTimeout(() => {\r\n          contentSection.style.display = 'none';\r\n          usersSection.style.display = 'block';\r\n          usersSection.style.animation = 'slideInLeft 0.5s forwards';\r\n        }, 500);\r\n      });\r\n  \r\n      // Añadir evento click al botón \"Anterior\"\r\n      prevButton.addEventListener('click', () => {\r\n        usersSection.style.animation = 'slideOutLeft 0.5s forwards';\r\n        title.textContent = 'GESTIÓN DE CONTENIDO';\r\n  \r\n        setTimeout(() => {\r\n          usersSection.style.display = 'none';\r\n          contentSection.style.display = 'block';\r\n          contentSection.style.animation = 'slideInRight 0.5s forwards';\r\n        }, 500);\r\n      });\r\n    });\r\n  })();","(function() {\r\n    'use strict';\r\n  \r\n    document.addEventListener('DOMContentLoaded', function() {\r\n      // Seleccionar los elementos necesarios\r\n      const inputPhoto = document.querySelector('#profile_photo_input');\r\n      const previewImg = document.querySelector('#photoPreview');\r\n  \r\n      // Verificar que existan en el DOM\r\n      if(!inputPhoto || !previewImg) return;\r\n  \r\n      // Al cambiar el input (seleccionar archivo)\r\n      inputPhoto.addEventListener('change', function(e) {\r\n        const file = e.target.files[0];\r\n        if(file) {\r\n          // Usamos FileReader para generar un DataURL y mostrarlo en <img>\r\n          const reader = new FileReader();\r\n          reader.onload = function(event) {\r\n            previewImg.src = event.target.result; // asignamos la ruta al src de #photoPreview\r\n          };\r\n          reader.readAsDataURL(file);\r\n        }\r\n      });\r\n    });\r\n  })();\r\n  ","document.addEventListener('DOMContentLoaded', () => {\r\n    const headers = document.querySelectorAll('.accordion__header');\r\n  \r\n    headers.forEach(header => {\r\n      header.addEventListener('click', () => {\r\n        // Toggle en el header\r\n        header.classList.toggle('is-open');\r\n  \r\n        // El panel es el siguiente hermano\r\n        const panel = header.nextElementSibling;\r\n        if(panel && panel.classList.contains('accordion__panel')) {\r\n          panel.classList.toggle('is-open');\r\n        }\r\n      });\r\n    });\r\n  });\r\n  ","(function() {\r\n    'use strict';\r\n  \r\n    document.addEventListener('DOMContentLoaded', function() {\r\n      const codeBlocks = document.querySelectorAll('.code-block');\r\n      codeBlocks.forEach((block) => {\r\n        const copyBtn = block.querySelector('.code-block__copy-btn');\r\n        if(!copyBtn) return;\r\n  \r\n        // Al hacer clic => copiamos todo el contenido (unido) del .code-block__lines\r\n        copyBtn.addEventListener('click', () => {\r\n          const lines = block.querySelectorAll('.code-block__line');\r\n          let textToCopy = '';\r\n          lines.forEach(line => {\r\n            textToCopy += line.textContent;\r\n          });\r\n  \r\n          // Usamos la API del portapapeles\r\n          navigator.clipboard.writeText(textToCopy)\r\n            .then(() => {\r\n              // Podrías mostrar un mensaje “Copiado!”\r\n              copyBtn.textContent = 'Copiado!';\r\n              setTimeout(() => {\r\n                copyBtn.textContent = 'Copiar';\r\n              }, 2000);\r\n            })\r\n            .catch(err => {\r\n              console.error('Error al copiar: ', err);\r\n            });\r\n        });\r\n      });\r\n    });\r\n  })();\r\n  ","(function(){\r\n    'use strict';\r\n  \r\n    document.addEventListener('DOMContentLoaded', function() {\r\n      // 1) Botón para \"Cancelar\" o regresar\r\n      const cancelBtn = document.getElementById('cancelEditPostBtn');\r\n      if(cancelBtn) {\r\n        cancelBtn.addEventListener('click', () => {\r\n          // Redirigir a /foro o la URL que consideres para cancelar\r\n          window.location.href = '/foro';\r\n        });\r\n      }\r\n  \r\n      // 2) Botón \"Eliminar Publicación\"\r\n      const deletePostBtn = document.getElementById('deletePostBtn');\r\n      if(deletePostBtn) {\r\n        deletePostBtn.addEventListener('click', () => {\r\n          const confirmacion = confirm('¿Deseas eliminar esta publicación? No se puede deshacer.');\r\n          if(!confirmacion) return;\r\n          // Redirigir, p.ej. a /foro/eliminar?id=XX\r\n          const postId = \"<?php echo $publicacion->id; ?>\";\r\n          window.location.href = \"/foro/eliminar?id=\" + postId;\r\n        });\r\n      }\r\n  \r\n      // 3) Remover media existente\r\n      const removeItemBtns = document.querySelectorAll('.post-edit__remove-item-btn');\r\n      const editForm = document.getElementById('editPostForm');\r\n      removeItemBtns.forEach(btn => {\r\n        btn.addEventListener('click', () => {\r\n          const mediaPath = btn.dataset.media;\r\n          if(!mediaPath) return;\r\n          // ocultar o remover el div\r\n          const item = btn.closest('.post-edit__dynamic-item');\r\n          if(item) item.style.display = 'none';\r\n  \r\n          // Crear un input hidden para indicar al backend que se elimine\r\n          const hiddenInput = document.createElement('input');\r\n          hiddenInput.type = 'hidden';\r\n          hiddenInput.name = 'remove_media[]';\r\n          hiddenInput.value = mediaPath;\r\n          editForm.appendChild(hiddenInput);\r\n        });\r\n      });\r\n  \r\n      // 4) Lógica para añadir bloques de código / imagen => similar a tu modal\r\n      const addCodeBlockBtn = document.getElementById('addCodeBlockBtn');\r\n      const addImageBtn = document.getElementById('addImageBtn');\r\n      const dynamicSections = document.getElementById('dynamicSections');\r\n  \r\n      if(addCodeBlockBtn && dynamicSections) {\r\n        addCodeBlockBtn.addEventListener('click', () => {\r\n          const itemDiv = document.createElement('div');\r\n          itemDiv.classList.add('post-edit__dynamic-item');\r\n  \r\n          // Botón para eliminar\r\n          const removeBtn = document.createElement('button');\r\n          removeBtn.type = 'button';\r\n          removeBtn.classList.add('post-edit__remove-item-btn');\r\n          removeBtn.innerHTML = '&times;';\r\n          removeBtn.addEventListener('click', () => itemDiv.remove());\r\n          itemDiv.appendChild(removeBtn);\r\n  \r\n          // Etiqueta\r\n          const label = document.createElement('label');\r\n          label.textContent = 'Bloque de código (nuevo):';\r\n          itemDiv.appendChild(label);\r\n  \r\n          // Textarea\r\n          const textarea = document.createElement('textarea');\r\n          textarea.name = 'blocks_code[]';\r\n          textarea.rows = 6;\r\n          textarea.classList.add('post-edit__code-snippet');\r\n          itemDiv.appendChild(textarea);\r\n  \r\n          dynamicSections.appendChild(itemDiv);\r\n        });\r\n      }\r\n  \r\n      if(addImageBtn && dynamicSections) {\r\n        addImageBtn.addEventListener('click', () => {\r\n          const itemDiv = document.createElement('div');\r\n          itemDiv.classList.add('post-edit__dynamic-item');\r\n  \r\n          // Botón para eliminar\r\n          const removeBtn = document.createElement('button');\r\n          removeBtn.type = 'button';\r\n          removeBtn.classList.add('post-edit__remove-item-btn');\r\n          removeBtn.innerHTML = '&times;';\r\n          removeBtn.addEventListener('click', () => itemDiv.remove());\r\n          itemDiv.appendChild(removeBtn);\r\n  \r\n          // Etiqueta\r\n          const label = document.createElement('label');\r\n          label.textContent = 'Imagen adicional (nueva):';\r\n          itemDiv.appendChild(label);\r\n  \r\n          // Input file\r\n          const inputFile = document.createElement('input');\r\n          inputFile.type = 'file';\r\n          inputFile.name = 'blocks_images[]';\r\n          itemDiv.appendChild(inputFile);\r\n  \r\n          // Vista previa\r\n          const previewDiv = document.createElement('div');\r\n          previewDiv.classList.add('post-edit__image-preview-container');\r\n          itemDiv.appendChild(previewDiv);\r\n  \r\n          // Al cambiar el input, mostramos una vista previa\r\n          inputFile.addEventListener('change', e => {\r\n            const file = e.target.files[0];\r\n            if(file) {\r\n              const reader = new FileReader();\r\n              reader.onload = evt => {\r\n                previewDiv.innerHTML = '';\r\n                const img = document.createElement('img');\r\n                img.src = evt.target.result;\r\n                img.classList.add('post-edit__image-preview');\r\n                previewDiv.appendChild(img);\r\n              };\r\n              reader.readAsDataURL(file);\r\n            } else {\r\n              previewDiv.innerHTML = '';\r\n            }\r\n          });\r\n  \r\n          dynamicSections.appendChild(itemDiv);\r\n        });\r\n      }\r\n  \r\n    });\r\n  })();","(function() {\r\n    'use strict';\r\n  \r\n    // Esperar a que el DOM esté cargado (buena práctica si el script se carga en el <head>)\r\n    document.addEventListener('DOMContentLoaded', function() {\r\n  \r\n      // BOTÓN HAMBURGUESA (abre el menú mobile)\r\n      const btnToggle = document.querySelector('.main-nav__toggle');\r\n      // MENÚ LATERAL MÓVIL\r\n      const mobileMenu = document.getElementById('mobileMenu');\r\n      // BOTÓN PARA CERRAR MENÚ MÓVIL\r\n      const btnCloseMobile = document.querySelector('.mobile-menu__close');\r\n      \r\n      // BOTÓN AVATAR (abre panel de usuario)\r\n      const btnAvatar = document.querySelector('.main-nav__avatar-btn');\r\n      // PANEL DE USUARIO\r\n      const userPanel = document.getElementById('userPanel');\r\n      // BOTÓN PARA CERRAR PANEL DE USUARIO\r\n      const btnCloseUserPanel = document.querySelector('.user-panel__close');\r\n  \r\n  \r\n      // --- Lógica para abrir/cerrar MENÚ MÓVIL ---\r\n  \r\n      // Abre el menú móvil al hacer click en el botón hamburguesa\r\n      if (btnToggle && mobileMenu) {\r\n        btnToggle.addEventListener('click', () => {\r\n          mobileMenu.classList.add('mobile-menu--open');\r\n        });\r\n      }\r\n  \r\n      // Cierra el menú móvil al hacer click en el botón \"X\"\r\n      if (btnCloseMobile && mobileMenu) {\r\n        btnCloseMobile.addEventListener('click', () => {\r\n          mobileMenu.classList.remove('mobile-menu--open');\r\n        });\r\n      }\r\n  \r\n  \r\n      // --- Lógica para abrir/cerrar PANEL DE USUARIO ---\r\n  \r\n      // Abre el panel de usuario al hacer click en el avatar\r\n      if (btnAvatar && userPanel) {\r\n        btnAvatar.addEventListener('click', () => {\r\n          userPanel.classList.add('user-panel--open');\r\n        });\r\n      }\r\n  \r\n      // Cierra el panel de usuario al hacer click en el botón \"X\"\r\n      if (btnCloseUserPanel && userPanel) {\r\n        btnCloseUserPanel.addEventListener('click', () => {\r\n          userPanel.classList.remove('user-panel--open');\r\n        });\r\n      }\r\n  \r\n      // Opcional: podrías cerrar el panel si se hace click fuera del mismo, etc.\r\n    });\r\n  })();\r\n\r\n\r\n  ","(function() {\r\n  'use strict';\r\n\r\n  document.addEventListener('DOMContentLoaded', function() {\r\n    // 1) Detectar la sección de comentarios\r\n    const postCommentsSection = document.querySelector('.post-comments');\r\n    if (!postCommentsSection) return;\r\n\r\n    // Leer el ID de la publicación desde un data-attribute\r\n    const publicacionIdAttr = postCommentsSection.getAttribute('data-publicacionid');\r\n    const publicacionId = publicacionIdAttr ? parseInt(publicacionIdAttr) : null;\r\n    if (!publicacionId) {\r\n      console.warn('No se encontró un data-publicacionid en la sección .post-comments');\r\n    }\r\n\r\n    // 2) Botón \"Comentar esta Publicación\" (top-level)\r\n    const topLevelCommentBtn = postCommentsSection.querySelector('.post-comments__comment-btn');\r\n    if (topLevelCommentBtn) {\r\n      topLevelCommentBtn.addEventListener('click', () => {\r\n        let topForm = postCommentsSection.querySelector('.post-comments__top-form');\r\n        if (!topForm) {\r\n          // Crear el formulario top-level si no existe\r\n          topForm = createTopLevelForm(publicacionId);\r\n          postCommentsSection.appendChild(topForm);\r\n        }\r\n\r\n        // Toggléa la visibilidad\r\n        toggleVisibility(topForm);\r\n      });\r\n    }\r\n\r\n    // 3) Botones \"Responder\" en cada comentario usando Event Delegation\r\n    postCommentsSection.addEventListener('click', function(event) {\r\n      if (event.target && event.target.classList.contains('comment-card__responder-btn')) {\r\n        event.preventDefault();\r\n        event.stopPropagation(); // Evita que el evento se propague a otros listeners\r\n\r\n        const responderBtn = event.target;\r\n        const commentCard = responderBtn.closest('.comment-card');\r\n        if (!commentCard) return;\r\n\r\n        const commentId = commentCard.dataset.commentid;\r\n        if (!commentId) {\r\n          console.warn('El comentario no tiene un data-commentid válido.');\r\n          return;\r\n        }\r\n\r\n        console.log('Responder clickeado en comentario ID:', commentId);\r\n\r\n        // Buscar el formulario de respuesta específico usando data-formid\r\n        let replyForm = commentCard.querySelector(`.comment-card__reply-form[data-formid=\"reply-form-${commentId}\"]`);\r\n\r\n        if (!replyForm) {\r\n          // Crear el formulario de respuesta si no existe\r\n          replyForm = createReplyForm(publicacionId, commentId);\r\n          commentCard.appendChild(replyForm);\r\n          console.log('Formulario de respuesta creado para comentario ID:', commentId);\r\n        }\r\n\r\n        // Toggléa la visibilidad de este replyForm\r\n        toggleVisibility(replyForm);\r\n        console.log('Estado del formulario después del toggle:', replyForm.style.display === 'none' ? 'Oculto' : 'Visible');\r\n      }\r\n    });\r\n\r\n    // ============ FUNCIONES AUXILIARES ===========\r\n\r\n    /**\r\n     * Función para enviar un comentario o respuesta\r\n     */\r\n    function comentar(publicacionId, parentId, texto) {\r\n      // Construimos el body => x-www-form-urlencoded\r\n      const bodyData = new URLSearchParams();\r\n      bodyData.append('publicacion_id', publicacionId);\r\n      if (parentId) {\r\n        bodyData.append('parent_comment_id', parentId);\r\n      }\r\n      bodyData.append('texto', texto);\r\n\r\n      // Realizar la solicitud POST\r\n      return fetch(`/foro/publicacion?id=${publicacionId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        body: bodyData.toString()\r\n      })\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        return response.text(); // o .json() si devuelves algo en JSON\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Crear el formulario para comentarios de nivel superior\r\n     */\r\n    function createTopLevelForm(publicacionId) {\r\n      const topForm = document.createElement('div');\r\n      topForm.classList.add('post-comments__top-form');\r\n      topForm.style.marginTop = '1rem';\r\n      topForm.style.display = 'none'; // Inicialmente oculto\r\n\r\n      const textArea = document.createElement('textarea');\r\n      textArea.rows = 4;\r\n      textArea.placeholder = 'Escribe tu comentario...';\r\n      textArea.style.width = '100%';\r\n      textArea.style.marginBottom = '0.5rem';\r\n\r\n      const sendBtn = document.createElement('button');\r\n      sendBtn.type = 'button';\r\n      sendBtn.textContent = 'Enviar';\r\n      sendBtn.classList.add('btn', 'btn-primary'); // Utiliza clases CSS para estilos\r\n      sendBtn.style.cursor = 'pointer';\r\n\r\n      sendBtn.addEventListener('click', () => {\r\n        const text = textArea.value.trim();\r\n        if (!text) {\r\n          alert('Por favor, escribe algo antes de enviar.');\r\n          return;\r\n        }\r\n        comentar(publicacionId, null, text)\r\n          .then(() => {\r\n            window.location.reload();\r\n          })\r\n          .catch(err => {\r\n            console.error('Error al comentar:', err);\r\n            alert('Error al comentar');\r\n          });\r\n      });\r\n\r\n      topForm.appendChild(textArea);\r\n      topForm.appendChild(sendBtn);\r\n      return topForm;\r\n    }\r\n\r\n    /**\r\n     * Crear el formulario para responder a un comentario específico\r\n     */\r\n    function createReplyForm(publicacionId, parentId) {\r\n      const replyForm = document.createElement('div');\r\n      replyForm.classList.add('comment-card__reply-form');\r\n      replyForm.setAttribute('data-formid', `reply-form-${parentId}`);\r\n      replyForm.style.marginTop = '1rem';\r\n      replyForm.style.display = 'none'; // Inicialmente oculto\r\n\r\n      const textArea = document.createElement('textarea');\r\n      textArea.rows = 4;\r\n      textArea.placeholder = 'Escribe tu respuesta...';\r\n      textArea.style.width = '100%';\r\n      textArea.style.marginBottom = '0.5rem';\r\n\r\n      const sendBtn = document.createElement('button');\r\n      sendBtn.type = 'button';\r\n      sendBtn.textContent = 'Enviar';\r\n      sendBtn.classList.add('btn', 'btn-success'); // Utiliza clases CSS para estilos\r\n      sendBtn.style.cursor = 'pointer';\r\n\r\n      sendBtn.addEventListener('click', () => {\r\n        const text = textArea.value.trim();\r\n        if (!text) {\r\n          alert('Por favor, escribe algo antes de enviar.');\r\n          return;\r\n        }\r\n        comentar(publicacionId, parentId, text)\r\n          .then(() => {\r\n            window.location.reload();\r\n          })\r\n          .catch(err => {\r\n            console.error('Error al responder:', err);\r\n            alert('Error al responder');\r\n          });\r\n      });\r\n\r\n      replyForm.appendChild(textArea);\r\n      replyForm.appendChild(sendBtn);\r\n      return replyForm;\r\n    }\r\n\r\n    /**\r\n     * Función para togglear la visibilidad de un elemento\r\n     */\r\n    function toggleVisibility(element) {\r\n      if (element.style.display === 'none' || element.style.display === '') {\r\n        element.style.display = 'block';\r\n      } else {\r\n        element.style.display = 'none';\r\n      }\r\n    }\r\n\r\n  });\r\n})();\r\n","(function(){\r\n    'use strict';\r\n  \r\n    document.addEventListener('DOMContentLoaded', function() {\r\n      // ========== A) Editar Descripción ==========\r\n  \r\n      // Verificar si existe el botón \"editDescriptionBtn\" y el contenedor\r\n      const editDescBtn = document.querySelector('#editDescriptionBtn');\r\n      const descriptionContainer = document.querySelector('#profileDescription');\r\n      const descriptionContent = document.querySelector('#descriptionContent');\r\n  \r\n      if(editDescBtn && descriptionContainer && descriptionContent) {\r\n        editDescBtn.addEventListener('click', function() {\r\n          // 1. Ocultar el p (descriptionContent)\r\n          descriptionContent.style.display = 'none';\r\n          editDescBtn.style.display = 'none';\r\n  \r\n          // 2. Crear un textarea con el contenido actual\r\n          const textArea = document.createElement('textarea');\r\n          textArea.classList.add('profile-container__description-textarea');\r\n          textArea.value = descriptionContent.textContent.trim();\r\n          textArea.rows = 5;\r\n  \r\n          // 3. Botones de guardar/cancelar\r\n          const saveBtn = document.createElement('button');\r\n          saveBtn.textContent = 'Guardar';\r\n          saveBtn.type = 'button';\r\n          saveBtn.classList.add('profile-container__description-save');\r\n  \r\n          const cancelBtn = document.createElement('button');\r\n          cancelBtn.textContent = 'Cancelar';\r\n          cancelBtn.type = 'button';\r\n          cancelBtn.classList.add('profile-container__description-cancel');\r\n  \r\n          // Insertarlos en el DOM\r\n          descriptionContainer.appendChild(textArea);\r\n          descriptionContainer.appendChild(saveBtn);\r\n          descriptionContainer.appendChild(cancelBtn);\r\n  \r\n          // Manejo de click en \"Guardar\"\r\n          saveBtn.addEventListener('click', function() {\r\n            const nuevaDescripcion = textArea.value.trim();\r\n            \r\n            // Enviar POST al backend\r\n            fetch('/perfil', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n              },\r\n              body: new URLSearchParams({\r\n                'description': nuevaDescripcion\r\n              })\r\n            })\r\n            .then(resp => resp.text())\r\n            .then(data => {\r\n              // Podrías redirigir o actualizar la descripción en la página\r\n              // sin recargar. Ej:\r\n              descriptionContent.textContent = nuevaDescripcion || 'Sin descripción';\r\n              // Limpiar\r\n              textArea.remove();\r\n              saveBtn.remove();\r\n              cancelBtn.remove();\r\n              descriptionContent.style.display = 'block';\r\n              editDescBtn.style.display = 'block';\r\n            })\r\n            .catch(err => console.error(err));\r\n          });\r\n  \r\n          // Manejo de click en \"Cancelar\"\r\n          cancelBtn.addEventListener('click', function() {\r\n            // Restaurar\r\n            textArea.remove();\r\n            saveBtn.remove();\r\n            cancelBtn.remove();\r\n            descriptionContent.style.display = 'block';\r\n            editDescBtn.style.display = 'block';\r\n          });\r\n        });\r\n      }\r\n  \r\n      // ========== B) Vista Previa de Foto ==========\r\n  \r\n      const inputPhoto = document.querySelector('#profile_photo_input');\r\n      const previewImg = document.querySelector('#photoPreview');\r\n  \r\n      if(inputPhoto && previewImg) {\r\n        inputPhoto.addEventListener('change', function(e) {\r\n          const file = e.target.files[0];\r\n          if(file) {\r\n            const reader = new FileReader();\r\n            reader.onload = function(event) {\r\n              previewImg.src = event.target.result;\r\n            };\r\n            reader.readAsDataURL(file);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  })();\r\n  ","(function(){\r\n    const tagsInput = document.querySelector('#tags_input');\r\n    \r\n    if(tagsInput){\r\n        tagsDiv = document.querySelector('#tags');\r\n        tagsHiddenInput = document.querySelector('[name=\"tags\"]');\r\n        \r\n        let tags = [];\r\n\r\n        //Get from the input hidden\r\n        if(tagsHiddenInput.value !== ''){\r\n            tags = tagsHiddenInput.value.split(',');\r\n            showTags();\r\n        }\r\n\r\n        tagsInput.addEventListener('keypress', saveTag);\r\n        \r\n\r\n        function saveTag(e){\r\n            if(e.keyCode == 44){\r\n\r\n                if(e.target.value.trim() === '' || e.target.value < 1){ return ;}\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = '';\r\n\r\n                showTags();\r\n            }\r\n        }\r\n\r\n        function showTags(){\r\n            tagsDiv.textContent = '';\r\n\r\n            tags.forEach(tag =>{\r\n                const tip = document.createElement('LI');\r\n                tip.classList.add('skill__tag');\r\n                tip.textContent = tag;\r\n                tip.ondblclick = deleteTag;\r\n                tagsDiv.appendChild(tip);\r\n            })\r\n\r\n            updateHiddenInput();\r\n        }\r\n\r\n        function updateHiddenInput(){\r\n            tagsHiddenInput.value = tags.toString();\r\n        }\r\n\r\n        function deleteTag(e){\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            updateHiddenInput();\r\n        }\r\n    }\r\n})() //IIFE"]}